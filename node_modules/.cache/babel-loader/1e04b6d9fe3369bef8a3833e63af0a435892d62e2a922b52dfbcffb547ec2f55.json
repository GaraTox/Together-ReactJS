{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\OneDrive\\\\Bureau\\\\Together-ReactJS\\\\src\\\\components\\\\Validation.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Validation(values) {\n  let error = {};\n  const email_patt = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_patt = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.pseudoUser === \"\") {\n    error.pseudoUser = \"Le pseudo ne peut pas être vide\";\n  } else {\n    error.pseudoUser = \"\";\n  }\n  if (values.mailUser === \"\") {\n    error.mailUser = \"L'adresse mail ne peut pas être vide\";\n  } else if (!email_patt.test(values.mailUser)) {\n    error.mailUser = \"Mail non valide\";\n  } else {\n    error.mailUser = \"\";\n  }\n  if (values.passwordUser === \"\") {\n    error.passwordUser = \"le mot de passe ne peux pas etre vide\";\n  } else if (!password_patt.test(values.passwordUser)) {\n    error.passwordUser = \"Mot de passe non valide\";\n  } else {\n    error.passwordUser = \"\";\n  }\n}\n_c = Validation;\nexport default Validation;\nsetErrors(Validation(values));\nif (errors.pseudoUser === \"\" && errors.mailUser === \"\" && errors.birthdayUser === \"\" && errors.passwordUser === \"\") {}\n{\n  errors.pseudoUser && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-danger\",\n    children: errors.pseudoUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 27\n  }, this);\n}\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_patt","password_patt","pseudoUser","mailUser","test","passwordUser","_c","setErrors","errors","birthdayUser","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["C:/Users/pc/OneDrive/Bureau/Together-ReactJS/src/components/Validation.js"],"sourcesContent":["function Validation(values){\r\n    let error = {}\r\n    const email_patt = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const password_patt = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\r\n\r\n    if(values.pseudoUser === \"\"){\r\n        error.pseudoUser = \"Le pseudo ne peut pas être vide\";\r\n    }else{\r\n        error.pseudoUser = \"\";\r\n    }\r\n\r\n    if(values.mailUser === \"\"){\r\n        error.mailUser = \"L'adresse mail ne peut pas être vide\";\r\n    }else if(!email_patt.test(values.mailUser)){\r\n        error.mailUser = \"Mail non valide\";\r\n    }else{\r\n        error.mailUser = \"\";\r\n    }\r\n\r\n    if(values.passwordUser === \"\"){\r\n        error.passwordUser =\"le mot de passe ne peux pas etre vide\";\r\n    }else if(!password_patt.test(values.passwordUser)){\r\n        error.passwordUser=\"Mot de passe non valide\";\r\n    }else{\r\n        error.passwordUser=\"\";\r\n    }\r\n}\r\n\r\nexport default Validation;\r\n\r\n\r\n\r\nsetErrors(Validation(values));\r\n    if(errors.pseudoUser === \"\" && errors.mailUser === \"\" && errors.birthdayUser === \"\" && errors.passwordUser === \"\" ){}\r\n\r\n\r\n    {errors.pseudoUser && <span className=\"text-danger\">{errors.pseudoUser}</span>}\r\n"],"mappings":";;AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,MAAMC,aAAa,GAAG,iDAAiD;EAEvE,IAAGH,MAAM,CAACI,UAAU,KAAK,EAAE,EAAC;IACxBH,KAAK,CAACG,UAAU,GAAG,iCAAiC;EACxD,CAAC,MAAI;IACDH,KAAK,CAACG,UAAU,GAAG,EAAE;EACzB;EAEA,IAAGJ,MAAM,CAACK,QAAQ,KAAK,EAAE,EAAC;IACtBJ,KAAK,CAACI,QAAQ,GAAG,sCAAsC;EAC3D,CAAC,MAAK,IAAG,CAACH,UAAU,CAACI,IAAI,CAACN,MAAM,CAACK,QAAQ,CAAC,EAAC;IACvCJ,KAAK,CAACI,QAAQ,GAAG,iBAAiB;EACtC,CAAC,MAAI;IACDJ,KAAK,CAACI,QAAQ,GAAG,EAAE;EACvB;EAEA,IAAGL,MAAM,CAACO,YAAY,KAAK,EAAE,EAAC;IAC1BN,KAAK,CAACM,YAAY,GAAE,uCAAuC;EAC/D,CAAC,MAAK,IAAG,CAACJ,aAAa,CAACG,IAAI,CAACN,MAAM,CAACO,YAAY,CAAC,EAAC;IAC9CN,KAAK,CAACM,YAAY,GAAC,yBAAyB;EAChD,CAAC,MAAI;IACDN,KAAK,CAACM,YAAY,GAAC,EAAE;EACzB;AACJ;AAACC,EAAA,GA1BQT,UAAU;AA4BnB,eAAeA,UAAU;AAIzBU,SAAS,CAACV,UAAU,CAACC,MAAM,CAAC,CAAC;AACzB,IAAGU,MAAM,CAACN,UAAU,KAAK,EAAE,IAAIM,MAAM,CAACL,QAAQ,KAAK,EAAE,IAAIK,MAAM,CAACC,YAAY,KAAK,EAAE,IAAID,MAAM,CAACH,YAAY,KAAK,EAAE,EAAE,CAAC;AAGpH;EAACG,MAAM,CAACN,UAAU,iBAAIQ,OAAA;IAAMC,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAEJ,MAAM,CAACN;EAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAAA;AAAC,IAAAV,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}